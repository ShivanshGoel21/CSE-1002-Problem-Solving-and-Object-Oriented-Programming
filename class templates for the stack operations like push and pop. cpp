#include<iostream>
using namespace std;

template<typename T>
class stack{
	private:
	int top;
	T arr[10];
	public:
	stack(){
		top=-1;
	}
	void push(T a);
	T pop();
};

template<typename T>
void stack<T> :: push(T a){
	if(top>=10){
		cout<<"Stack Full"<<endl;
		return;
	}
	top++;
	arr[top]=a;
}

template<typename T>
T stack<T> :: pop(){
	if(top==-1){
		cout<<"Invalid Operation!! Stack Empty"<<endl;
	}
	return arr[top--];
}



int main(){
	stack<int> s;
	s.push(2);
	s.push(3);
	s.push(4);
	s.push(5);
	s.push(2);
	s.push(3);
	s.push(4);
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	cout<<s.pop()<<endl;
	return 0;

}
